/* Global reset */



/* Dark mode styles */
.dark-mode {
  background-color: #222;
  color: #ddd;
}


/* App container */
.app-container {
  position: relative;
}

/* Header styling */
.header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 10;
  padding: 10px 0;
  font-family: 'Dancing Script', cursive;
}

/* When dark mode is active, assume the parent (like .app-container) gets a dark-mode class */
.app-container.dark-mode .header {
  background-color: rgba(0, 0, 0, 0.9); /* or any dark background */
  color: #fff; /* adjust text color if needed */
}

.title {
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: #333;
}
.app-container.dark-mode .title {
  background-color: rgba(0, 0, 0, 0.9); /* or any dark background */
  color: #b6b6b6; /* adjust text color if needed */
}

/* Tutorial grid styling */
.tutorial-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  column-gap: 20px;
  row-gap: 10px;
  padding: 20px;
  margin: 0 auto;
  min-height: 90vh;
  justify-content: center;
}

/* Media Queries */
@media (max-width: 480px) {
  .tutorial-grid {
    padding-top: 20%;
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 768px) {
  .tutorial-grid {
    margin-top: 5%;
    grid-template-columns: repeat(3, 1fr);
  }
  .header{
    margin-top: -5%;
  }
}

@media (min-width: 1024px) {
  .tutorial-grid {
    margin-top: 20%;
    grid-template-columns: repeat(6, 1fr);
  }
  .header{
    margin-top: -10%;
  }
}

@media (min-width: 1440px) {
  .tutorial-grid {
    margin-top: 10%;
    grid-template-columns: repeat(6, 1fr);
  }
  .header{
    margin-top: -5%;
  }
}

/* Card styling */
.card {
  perspective: 1000px;
  position: relative;
}

.card-inner {
  position: relative;
  width: 100%;
  padding-top: 100%; /* Maintains square aspect ratio */
  transform-style: preserve-3d;
  transition: transform 0.5s;
  animation: flipAnimation 18s linear infinite;
  animation-delay: calc(var(--card-index) * 3s);
}

.card.flipped .card-inner {
  animation: none;
  transform: rotateY(180deg);
}

.card-front,
.card-back {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card-front {
  background-color: #ffffff93;
}
.app-container.dark-mode .card-front {
  background-color: rgba(14, 13, 13, 0.344); /* or any dark background */
  color: #fff; /* adjust text color if needed */
}

.card-back {
  background-color: #333333bb;
  color: #fff;
  transform: rotateY(180deg);
  padding: 10px;
  text-align: center;
}
.app-container.dark-mode .card-back {
  background-color: rgba(181, 181, 181, 0.575); /* or any dark background */
  color: #1f1f1f; /* adjust text color if needed */
}

/* Slide image styling */
.slide-image {
  width: 100%;
  border-radius: 8px;
}

/* Number styling */
.slide-number {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 30px;
  height: 30px;
  border: 2px solid gold;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: gold;
  background-color: rgba(0, 0, 0, 0.5);
  font-size: 1rem;
  font-weight: bold;
}

/* Keyframe animation for card flip */
@keyframes flipAnimation {
  0%, 16.67% {
    transform: rotateY(0deg);
  }
  19.44%, 36.11% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

/* Back button styling */
.back-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: #333;
  color: #fff;
  padding: 10px;
  border: none;
  width: 50px; /* Start as a small circle */
  height: 100px;
  border-radius: 50%;
  text-decoration: none;
  font-size: 1rem;
  font-weight: bold;
  overflow: hidden;
  z-index: 100;
  cursor: pointer;
  transition: width 0.5s ease, border-radius 0.5s ease;
  /* Animate in/out: total cycle = 7s */
  animation: backButtonAnimation 7s linear infinite;
}

.app-container.dark-mode .back-button {
  background-color: rgba(0, 0, 0, 0.499); /* or any dark background */
  color: #cfcfcf; /* adjust text color if needed */
}

@keyframes backButtonAnimation {
  0% {
    width: 50px;
    border-radius: 50%;
    opacity: 0;
  }
  14.3% { /* After 1s of 7s */
    width: 220px;
    border-radius: 25px;
    opacity: 1;
  }
  85.7% { /* Hold state */
    width: 220px;
    border-radius: 25px;
    opacity: 1;
  }
  100% { /* Contract and fade out in the final second */
    width: 50px;
    border-radius: 50%;
    opacity: 0;
  }
}

/* Back button text animation */
.back-button-text {
  opacity: 0;
  display: inline-block;
  white-space: nowrap;
  transform: scale(0.8);
  transition: opacity 0.5s ease 0.5s;
 
  padding: 10px
}

@keyframes backButtonTextAnimation {
  0%, 14.3% {
    opacity: 0;
    transform: scale(0.8);
  }
  20% {
    opacity: 1;
    transform: scale(1);
  }
  85.7% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.8);
  }
}

/* Apply text animation to the text inside the back button */
.back-button .back-button-text {
  animation: backButtonTextAnimation 7s linear infinite;
}

/* Dark mode toggle inside the back button */
.dark-mode-toggle {
  margin-left: 15px;
  cursor: pointer;
  font-size: 1.2rem;
  transition: transform 0.3s ease;
  border: 2px solid white;
  border-radius: 50%;
  padding: 5px;
}
.app-container.dark-mode .dark-mode-toggle {
  background-color: rgba(255, 255, 255, 0.829); /* or any dark background */
  color: #161616; /* adjust text color if needed */
}


.dark-mode-toggle:hover {
  transform: scale(1.1);
}
